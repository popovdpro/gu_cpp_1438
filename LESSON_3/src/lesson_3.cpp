#include "lesson_3.h"

int main(int argc, char const *argv[])
{

	// 1. Написать программу, вычисляющую выражение a * (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – целочисленные константы;
	std::cout << "Part 1:" << std::endl;
	const int a = 5;
	const int b = 2;
	const int c = 3;
	const int d = 44;
	std::cout << "a * (b + (c / d)) = " << a << " * (" << b <<" + (" << c <<" / " << d <<")) = " << a * (b + ((float)c / d)) << std::endl;

	/*
	 *	2. Дано целое число, выведите на экран разницу между этим числом и числом 21. Если же заданное число больше, чем 21, 
	 *	необходимо вывести удвоенную разницу между этим числом и 21. 
	 *	При выполнении задания следует использовать тернарный оператор.
	 */
	std::cout << "Part 2:" << std::endl;
	int a2 = 5;
	std::cout <<  "a2 == " << a2 << ", result: " << ((a2<=21) ? (a2-21): (a2-21)*2) << std::endl;
	a2 = 33;
	std::cout <<  "a2 == " << a2 << ", result: " << ((a2<=21) ? (a2-21): (a2-21)*2) << std::endl;


	// 3. * Написать программу, вычисляющую выражение из первого задания, а переменные для неё инициализировать в другом файле
	std::cout << "Part 3:" << std::endl;
	std::cout << "a_ext * (b_ext + (c_ext / d_ext)) = " << a_ext << " * (" << b_ext <<" + (" << c_ext <<" / " << d_ext <<")) = " << a_ext * (b_ext + ((float)c_ext / d_ext)) << std::endl;

	/* 4. * Описать трёхмерный целочисленный массив, размером 3х3х3, 
	* создать указатель на значения внутри массива и при помощи операции 
	* разыменования вывести на экран значение центральной 
	* ячейки получившегося куба [1][1][1]? 
	*/
	std::cout << "Part 4:" << std::endl;

	int cube[3][3][3] = {
		{
            {1, 11, 11},
            {1, 11, 11},
            {1, 11, 11}
        },
		{
            {1, 11, 11},
            {1, 88, 11},
            {1, 11, 11}
        },
		{
            {1, 11, 11},
            {1, 11, 11},
            {1, 11, 11}
        }
	};
	int * center = &cube[1][1][1];
	std::cout << "cube[1][1][1]: " << cube[1][1][1] << std::endl;
	std::cout << "center address: " << center << std::endl;
	std::cout << "center value: " << *center << std::endl;

	return 0;
}
